# -*- coding: utf-8 -*-
"""Stock price forecasting.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_UpRLcrwbr59nOkYoMLyYgggh0JOLCE1
"""

import pandas as pd
from sklearn.linear_model import LinearRegression
import matplotlib.pyplot as plt
import numpy as np

# Sample data: stock prices for 15 days
data = {'Day': list(range(1,16)),
        'Price':[100,102,101,103,105,106,108,110,111,113,115,116,118,120,121]}
df = pd.DataFrame(data)

# Create a simple moving average as an additional feature
df['MA_3'] = df['Price'].rolling(window=3).mean().fillna(df['Price'])

# Features: Day and Moving Average
X = df[['Day','MA_3']]
y = df['Price']

# Train Linear Regression
model = LinearRegression()
model.fit(X,y)

# Predict next 5 days
future_days = np.array(range(16,21))
future_ma = np.array([df['Price'][-3:].mean()] * 5)  # simple approximation
future_X = pd.DataFrame(np.column_stack((future_days, future_ma)), columns=['Day', 'MA_3'])
preds = model.predict(future_X)

# Plot
plt.scatter(df['Day'], df['Price'], color="blue", label="Actual")
plt.plot(future_days, preds, color="red", marker='o', label="Forecast")
plt.xlabel("Day")
plt.ylabel("Stock Price")
plt.title("Simple Stock Price Forecasting")
plt.legend()
plt.show()