# -*- coding: utf-8 -*-
"""Titanic survival prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XvItbCpoM2sThC-eunTgsgnQnlDzl2L7
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, ConfusionMatrixDisplay
import matplotlib.pyplot as plt

# Sample Titanic dataset
data = {'Age':[22,38,26,35,28],
        'Sex':[0,1,1,1,0],  # 0=Male, 1=Female
        'Survived':[0,1,1,1,0]}
df = pd.DataFrame(data)

# Features and target
X = df[['Age','Sex']]
y = df['Survived']

# Split into train and test
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Logistic Regression model
model = LogisticRegression()
model.fit(X_train, y_train)

# Predictions
y_pred = model.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
print(f"Accuracy: {accuracy*100:.2f}%")

# Plot Age vs Survived
plt.figure(figsize=(6,4))
plt.scatter(df['Age'], df['Survived'], c=df['Sex'], cmap='bwr', s=100)
plt.xlabel("Age")
plt.ylabel("Survival (0=No, 1=Yes)")
plt.title("Titanic Survival Data")
plt.colorbar(label="Sex (0=Male, 1=Female)")
plt.show()

# Confusion matrix
ConfusionMatrixDisplay.from_predictions(y_test, y_pred, labels=[0, 1])
plt.title("Titanic Survival Prediction Confusion Matrix")
plt.show()

from sklearn.metrics import precision_score, recall_score, f1_score

# Calculate additional metrics
precision = precision_score(y_test, y_pred)
recall = recall_score(y_test, y_pred)
f1 = f1_score(y_test, y_pred)

print(f"Precision: {precision:.2f}")
print(f"Recall: {recall:.2f}")
print(f"F1-score: {f1:.2f}")